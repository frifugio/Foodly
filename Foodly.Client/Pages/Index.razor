@page "/"

@inject HttpClient Http
@using Foodly.Shared

<div class="container">
    <h1 class="mt-4">Foodly</h1>
    <blockquote class="blockquote mb-5">
        <footer class="blockquote-footer">Settimana n° @System.Globalization.ISOWeek.GetWeekOfYear(DateTime.Today)</footer>
    </blockquote>

    @if (foods == null)
    {
        <i class="fa fa-spinner fa-spin fa-3x fa-fw"></i>
        <span class="sr-only">Loading...</span>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover">
                <tbody>
                    @foreach (var food in foods)
                    {
                        <FoodRow Food="food" />
                    }
                </tbody>
            </table>
        </div>

        <button class="btn btn-success" @onclick="SaveFoods">Salva</button>
    }

    <div class="mt-4">
        <NavLink class="btn btn-primary" href="addfood">Aggiungi</NavLink>
        <button class="btn btn-success ml-1" @onclick="ResetAllQuantity">Reset</button>
    </div>
</div>

@code {
    private Food[] foods;

    protected override async Task OnInitializedAsync()
    {
        foods = await Http.GetFromJsonAsync<Food[]>("/api/GetAllFoods");
    }

    private async void SaveFoods()
    {
        foreach (var food in foods)
        {
            await Http.PutAsJsonAsync<Food>($"/api/UpdateFood/{food.Id}", food);
        }
    }

    private async void ResetAllQuantity()
    {
        foreach (var food in foods)
        {
            food.ActualQuantity = 0;
            food.OverQuantity = 0;

            await Http.PutAsJsonAsync<Food>($"/api/UpdateFood/{food.Id}", food);
        }
    }
}
